pipeline {
    agent any

    parameters {
        choice(name: 'BRANCH', choices: ['staging', 'prod'], description: 'Select the branch to build & deploy')
    }

    environment {
        VENV = 'venv'
        SSH_HOST = "${SSH_HOST_IP_ADDRESS}"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Setup virtual environment') {
            steps {
                sh 'python3 -m venv venv'
                sh '. venv/bin/activate'
            }
        }

        stage('Install dependencies') {
            steps {
                script {
                    sh "chmod -R 777 ${env.WORKSPACE}"
                    sh '. venv/bin/activate && pip install -r requirements.txt && pip install flask_cors && pip install jwt && pip install pytest'
                }
            }
        }

        stage('Run unittests') {
            steps {
                script {
                    sh '''
                    export PYTHONPATH="$WORKSPACE/code-and-docs-x00174641:$PYTHONPATH"
                    . venv/bin/activate
                    pytest -W ignore::DeprecationWarning
                    '''
                }
            }
        }
       pipeline {
    agent any

    stages {
        stage('Build and deploy') {
            steps {
                script {
                    sshagent(credentials: ['PRIVATE_KEY']) {
                        sh """
                            ssh -o StrictHostKeyChecking=no -i /root/.ssh/id_rsa root@${env.SSH_HOST} '
                                cd code-and-docs-x00174641/client &&
                                git checkout ${env.BRANCH_NAME}
                                git pull origin ${env.BRANCH_NAME}
                                ls &&
                                npm install &&
                                npm run build
                            '
                        """
                        sh """
                            ssh -o StrictHostKeyChecking=no -i /root/.ssh/id_rsa root@${env.SSH_HOST} '
                                cp -r ./code-and-docs-x00174641/client/dist /root/staging2
                            '
                        """
                        sh """
                            ssh -o StrictHostKeyChecking=no -i /root/.ssh/id_rsa root@${env.SSH_HOST} '
                                systemctl restart nginx
                            '
                        """
                    }
                }
            }
        }
    }
}

        // stage('Approval for Promotion to Production') {
        //     steps {
        //         script {
        //             input message: 'Review swap from staging to prod', ok: 'Approve'
        //         }
        //     }
        // }
        // stage('Deploy to Production') {
        //     steps {
        //         script {
        //             sshagent(credentials: ['PRIVATE_KEY']) {
        //                 sh """
        //                     ssh -o StrictHostKeyChecking=no -i /root/.ssh/id_rsa root@${env.SSH_HOST} '
        //                     cd code-and-docs-x00174641/client
        //                     '
        //                     scp -r ./dist/* root@139.59.160.51:/root/prod
        //                 """
        //                 sh """
        //                     ssh -o StrictHostKeyChecking=no -i /root/.ssh/id_rsa root@${env.SSH_HOST} '
        //                     systemctl restart nginx
        //                     '
        //                 """
        //             }
        //         }
        //     }
        // }
    }
}
